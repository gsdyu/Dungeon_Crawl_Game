import abc
class Entity:
    '''creates the entity class. Entity can be given a name, take damage, and 
    heal to full health'''
    
    def __init__(self,name,max_hp):
        '''initializes the entity object. the max health cannot be set below 0 and will automatically
        convert to 0 if given is below.
        var: 
            name: string, name of the entity
            max_hp: int, the max health of the entity

        '''
        self.name = name
        try:
            int(max_hp)
            if max_hp < 0:
                self.max_hp = 0
            else:
                self.max_hp = max_hp
            self.hp = self.max_hp
        except:
            raise TypeError

    def get_max_hp(self):
        '''returns: the max health the currenty entity can have
        '''
        return self.max_hp

    def get_hp(self):
        '''return: the amount of hp the current entity has
        '''
        return self.hp

    def get_name(self):
        '''return: the name of the entity'''
        return self.name

    def heal(self):
        '''the current entity's hp becomes restored to full
        '''
        self.hp = self.max_hp

    def take_damage(self,dmg):
        '''the current entity gets taken the given amount of damage
        var: dmg, int, the amount of damage to remove from the hp
        '''
        try:
            int(dmg)
            self.hp -= dmg
            if self.hp < 0:
                self.hp = 0
        except:
            raise TypeError

    @abc.abstractmethod
    def attack(self, entity):
        pass

    def __str__(self):
        return(f'{self.get_name()}\nHP: {self.get_hp()}/{self.get_max_hp()}')
        
    pass
